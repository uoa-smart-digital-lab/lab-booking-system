# ******************************************************************************************************************************************************
# This schema is for a lab bookings system with people and items.  Items can only be booked if a person has the rights to do so as determined by their
# status and induction level for a specific item.  The Administrators have complete power, whereas some capabilities are delegated to powerusers.
# ******************************************************************************************************************************************************

schema {
  query: Query
  mutation: Mutation
}

# Persons can have different access levels.
enum UserType {
  USER,                   # An ordinary person
  POWERUSER,              # A person with some delegated responsibility
  ADMIN                   # Overall administrator who can do anything
}

enum ItemType {
  FREE,                   # Anybody can book, no induction required
  INDUCTION,              # Must be inducted to book and use
  SUPERVISED              # Requires a supervisor for use (eg Lab Technician)
}

enum TimeOfDay {
  MORNING, AFTERNOON, EVENING, ALLDAY, BYHOUR
}

# Used to represent JSON data.  Sent in as stringified JSON, but returned as actual JSON.
scalar Json

scalar DateTime

# ******************************************************************************************************************************************************
# A person who can use the lab and book items.
# Note that a person who is a poweruser can alter the inductions of persons for items they themselves are inducted for, and alter the bookings for any
# person.
# ******************************************************************************************************************************************************
type Person {
  upi: String!            # The unique University Personal ID
  name: String!           # The person's name
  password: String!       # The password (stored encrypted)
  status: UserType!       # The person's level of access
  details: Json!          # Any other relevant details (for future expansion)

  inductions: [Induction] # A list of inductions for this person (ie items they are allowed to use)
  bookings: [Booking]     # A list of current bookings for this person
}

# ******************************************************************************************************************************************************
# A persistant session ID.
# ******************************************************************************************************************************************************
type Session {
  sessionid: String!      # A GUID representing a sessionid
  upi: String!            # The UPI of the person logged in
}

# ******************************************************************************************************************************************************
# A bookable item.
# ******************************************************************************************************************************************************
type Item {
  name: String!           # The unique name of the item
  image: String!          # A link to an image - can be to the images folder, eg /images/hololens2.jpg
  url: String!            # A link to further information about the item (on another webserver, eg canvas)
  details: Json!          # Any other relevant details (for future expansion)

  bookable: Boolean!      # Whether bookable at all
  status: ItemType!       # Level of access use

  inductions: [Induction] # A list of inductions for this item (ie who is allowed to use it)
  bookings: [Booking]     # A list of bookings for this item
}

# ******************************************************************************************************************************************************
# A record that a person has been inducted to use a specific item
# ******************************************************************************************************************************************************
type Induction {
  person: Person!
  item: Item!
}

# ******************************************************************************************************************************************************
# A bookable item.
# ******************************************************************************************************************************************************
type Booking {
  person: Person!
  item: Item!
  timeofday: TimeOfDay!
  start: DateTime
  end: DateTime
}

type Query {
  # ******************************************************************************************************************************************************
  # Person
  # ******************************************************************************************************************************************************
  # Get the specified person's details.  Admin and Poweruser can get anyone, but ordinary user can only get self.
  personGet (upi: String!): Person
  # Get all the people.  Admin and Poweruser can get anyone, but ordinary user can only get self.
  personAll: [Person]

  # ******************************************************************************************************************************************************
  # Item
  # ******************************************************************************************************************************************************
  # Get the specified item's details.
  itemGet (name: String!): Item
  # Get a list of all the items.
  itemAll: [Item]
}

type Mutation {
  # ******************************************************************************************************************************************************
  # Person
  # ******************************************************************************************************************************************************
  # Create a new person.  Can only be done by Admin users.  Send sessionid by header.
  personCreate (upi: String!, name: String!, password: String!, status: Status!, details: Json!): Person
  # Update a person.  Can only be done by Admin users.  Send sessionid by header.
  personUpdate (upi: String!, name: String, password: String, status: Status, details: Json): Person
  # Delete a person.  Can only be done by Admin users.  Send sessionid by header.
  personDelete (upi: String!): Person

  # ******************************************************************************************************************************************************
  # Session
  # ******************************************************************************************************************************************************
  # Log in.  Set sessionid returned as a header for subsequent API calls.
  login (upi: String!, password: String!): Session
  # Log out.  Uses sessionid in the header to know which person to log out.
  logout: Session

  # ******************************************************************************************************************************************************
  # Item
  # ******************************************************************************************************************************************************
  # Create a new item.  Can only be done by admins.
  itemCreate (name: String!, image: String!, url: String!, details: Json!): Item
  # Update an item.  Can only be done by admins.
  itemUpdate (name: String!, image: String, url: String, details: Json): Item
  # Delete an item.  Can only be done by admins.
  itemDelete (name: String!): Item
}